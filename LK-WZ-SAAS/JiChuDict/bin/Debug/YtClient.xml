<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YtClient</name>
    </assembly>
    <members>
        <member name="T:YtClient.SvrParam">
            <summary>
            访问服务端的参数对象
            </summary>
        </member>
        <member name="M:YtClient.SvrParam.ReSet(System.String,System.String,System.String)">
            <summary>
            重置参数
            </summary>
            <param name="Action">服务端IEx接口业务类</param>
            <param name="DbConn">默认数据库连接</param>
            <param name="sql">服务端XML配置OPT的id</param>
        </member>
        <member name="M:YtClient.SvrParam.#ctor(System.String,System.String,System.String)">
            <summary>
            实例化一个SvrParam对象
            </summary>
            <param name="Action">服务端IEx接口业务类</param>
            <param name="DbConn">默认数据库连接</param>
            <param name="sql">服务端XML配置OPT的id</param>
        </member>
        <member name="M:YtClient.SvrParam.#ctor(System.String,System.String)">
            <summary>
            实例化一个SvrParam对象
            </summary>
            <param name="Action">服务端IEx接口业务类</param>
            <param name="DbConn">默认数据库连接</param>
        </member>
        <member name="M:YtClient.SvrParam.RegBeforeEvent(System.String)">
            <summary>
            注册运行之前的事件
            </summary>
            <param name="eIEx">调用服务端接口前的调用事件</param>
        </member>
        <member name="M:YtClient.SvrParam.RegAfterEvent(System.String)">
            <summary>
            注册运行之后的事件
            </summary>
            <param name="eIEx">调用服务端接口之后的调用事件</param>
        </member>
        <member name="M:YtClient.SvrParam.Add(System.String,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="k">参数名称</param>
            <param name="obj">参数值</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.AddPro(System.String,System.Object)">
            <summary>
            添加存储过程参数
            </summary>
            <param name="k">参数名称</param>
            <param name="obj">参数值</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.AddPro(System.String,System.Object,YiTian.db.YtDbType)">
            <summary>
            添加存储过程参数
            </summary>
            <param name="k">参数名称</param>
            <param name="obj">参数值</param>
            <param name="dataType">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.AddPro(System.String,System.Object,YiTian.db.YtDbType,System.Boolean)">
            <summary>
            添加存储过程参数
            </summary>
            <param name="k">参数名称</param>
            <param name="obj">参数值</param>
            <param name="dataType">数据类型</param>
            <param name="IsOut">是否输出类型</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.Adds(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            批量添加参数
            </summary>
            <param name="a">参数集合</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.AddParam(System.Object[])">
            <summary>
            添加查询参数
            </summary>
            <param name="pa">查询参数</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.Guid">
            <summary>
            设置操作唯一性
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.SetAction(System.String)">
            <summary>
            设置访问的Action
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.SetBaseUrl(System.String)">
            <summary>
            设置访问服务器端的地址
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.SetAlertErr(System.Boolean)">
            <summary>
            设置是否提示错误信息
            </summary>
            <param name="ar"></param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.SetCondition(System.String,System.Object[])">
            <summary>
            设置条件，及其参数可以由对象SqlStr得来
            </summary>
            <param name="constr">条件</param>
            <param name="conditionParam">参数</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.SvrParam.SetTable(System.String,System.String)">
            <summary>
            设置查询表及其列
            </summary>
            <param name="table">表名</param>
            <param name="tabcolumn">列名</param>
            <returns></returns>
        </member>
        <member name="P:YtClient.SvrParam.ProStr">
            <summary>
            获取或设置执行的存储过程名称
            </summary>
        </member>
        <member name="P:YtClient.SvrParam.Condition">
            <summary>
            设置条件
            </summary>
        </member>
        <member name="F:YtClient.LoadAL.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:YtClient.LoadAL.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:YtClient.LoadAL.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:YtClient.LData">
            <summary>
            实现对ActionLoad访问的简化
            </summary>
        </member>
        <member name="M:YtClient.LData.LoadDataTable(System.String,System.Object[])">
            <summary>
            获取服务端查询DataTable
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="pa">参数</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YtClient.LData.LoadDataTable(System.String,System.String,System.Object[])">
            <summary>
            获取服务端查询DataTable
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="DbConn">数据连接</param>
            <param name="pa">参数</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YtClient.LData.Exe(System.String,System.String,System.Object[])">
            <summary>
            执行服务端查询返回首行首列
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="DbConn">数据连接</param>
            <param name="pa">参数</param>
            <returns>string</returns>
        </member>
        <member name="M:YtClient.LData.Es(System.String,System.String,System.Object[])">
            <summary>
            执行服务端查询返回首行首列
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="DbConn">数据连接</param>
            <param name="pa">参数</param>
            <returns>string</returns>
        </member>
        <member name="M:YtClient.LData.Do(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            执行服务端操作
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="param">参数集合</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.LData.Do(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            执行服务端操作
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="param">参数集合</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.LData.Do(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            执行服务端操作
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="param">参数集合</param>
            <param name="isGuid">是否唯一执行</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.LData.Do(YtClient.SvrParam)">
            <summary>
            执行指定的方法
            </summary>
            <param name="svr">服务端参数对象SvrParam</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.LData.Exe(YtClient.SvrParam)">
            <summary>
            执行操作返回信息
            </summary>
            <param name="svr">服务端参数对象SvrParam</param>
            <returns>服务端信息</returns>
        </member>
        <member name="M:YtClient.LData.Save(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            保存操作
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="DbConn">数据连接</param>
            <param name="param">参数</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.LData.Save(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            保存操作
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="DbConn">服务端连接</param>
            <param name="param">参数</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.LData.Save(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            保存操作
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="param">参数</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.LData.Save(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            保存操作
            </summary>
            <param name="key">服务端的OPT配置ID</param>
            <param name="param">参数</param>
            <param name="isGuid">是否唯一提交</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="T:YtClient.YtForm">
            <summary>
            默认窗体样式
            </summary>
        </member>
        <member name="T:YtClient.IYtForm">
            <summary>
            异步提交窗体接口 
            </summary>
        </member>
        <member name="M:YtClient.IYtForm.Invoke(System.Delegate)">
            <summary>
            执行代理方法
            </summary>
            <param name="ms">方法</param>
            <returns>返回值</returns>
        </member>
        <member name="M:YtClient.IYtForm.Invoke(System.Delegate,System.Object[])">
            <summary>
            执行代理方法
            </summary>
            <param name="ms">方法</param>
            <param name="objs">参数</param>
            <returns>返回值</returns>
        </member>
        <member name="M:YtClient.IYtForm.ExeEvent(System.EventHandler)">
            <summary>
            异步调用方法
            </summary>
            <param name="ev">方法</param>
        </member>
        <member name="M:YtClient.IYtForm.SetAlert(System.Boolean)">
            <summary>
            设置异步调用是否提示
            </summary>
            <param name="al"></param>
        </member>
        <member name="M:YtClient.IYtForm.SetOnlyText(System.String)">
            <summary>
            设置唯一标题
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:YtClient.IYtForm.GetOnlyText">
            <summary>
            获取唯一标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.IYtForm.SetMainThreadRun(System.Boolean)">
            <summary>
            设置是否主线程运行
            </summary>
            <param name="MainThreadRun"></param>
        </member>
        <member name="F:YtClient.YtForm.Alert">
            <summary>
            是否出现提示信息
            </summary>
        </member>
        <member name="M:YtClient.YtForm.HideOpaqueLayer">
            <summary>
            隐藏遮罩层
            </summary>
        </member>
        <member name="M:YtClient.YtForm.ExeEvent(System.EventHandler)">
            <summary>
            已线程方式执行方法
            </summary>
            <param name="ev"></param>
        </member>
        <member name="T:YtClient.data.events.LoadEventHandle">
            <summary>
            访问服务端成功事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:YtClient.data.events.LoadFaiEventHandle">
            <summary>
            访问服务端失败事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:YtClient.orm.AlertForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:YtClient.orm.AlertForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:YtClient.orm.AlertForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:YtClient.ActionTempTool">
            <summary>
            实现对离线数据的临时保存
            </summary>
        </member>
        <member name="M:YtClient.ActionTempTool.Save(YtClient.ActionLoad,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            保存离线数据
            </summary>
            <param name="ac">提交的ActionLoad</param>
            <param name="tab">表</param>
            <param name="filed">诊断</param>
            <param name="w">条件</param>
            <param name="title">标题</param>
            <param name="UserId">用户ID</param>
            <param name="UserName">用户名称</param>
            <param name="DepCode">单位编码</param>
            <param name="DepName">单位名称</param>
        </member>
        <member name="M:YtClient.ActionTempTool.Alert(System.String)">
            <summary>
            提醒
            </summary>
            <param name="t">标题</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.ActionTempTool.Saves">
            <summary>
            保存离线数据
            </summary>
        </member>
        <member name="M:YtClient.ActionTempTool.SubmitData(YtClient.orm.TempAc)">
            <summary>
            提交指定的操作
            </summary>
            <param name="ac">TempAc</param>
        </member>
        <member name="M:YtClient.ActionTempTool.IsGQ(YtClient.orm.TempAc)">
            <summary>
            判读指定的离线数据是否过期
            </summary>
            <param name="ac">TempAc</param>
            <returns>true 过期 false 不过期</returns>
        </member>
        <member name="M:YtClient.ActionTempTool.Clear">
            <summary>
            清除所有离线数据
            </summary>
        </member>
        <member name="M:YtClient.ActionTempTool.ShowSubmitWin">
            <summary>
            显示临时提交窗体
            </summary>
        </member>
        <member name="M:YtClient.zb.OpaLayer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            自定义绘制窗体
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:YtClient.zb.OpaLayer.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="T:YtClient.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:YtClient.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:YtClient.Properties.Resources.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="F:YtClient.locks.LockTool.GetSucTag">
            <summary>
            成功读取标志 可以为null
            </summary>
        </member>
        <member name="F:YtClient.locks.LockTool.SetSucTag">
            <summary>
            成功写入标志 可以为null
            </summary>
        </member>
        <member name="M:YtClient.locks.LockTool.jiami(System.String)">
            <summary>
            加密方法
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YtClient.locks.LockTool.jiemi(System.String)">
            <summary>
            解密方法
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:YtClient.ActionLoad">
            <summary>
            实现对服务端接口的访问
            </summary>
            <namespace>
            <summary>客服端连接服务端相关类</summary>
            </namespace>
        </member>
        <member name="M:YtClient.ActionLoad.SetTimeout(System.Int32,System.Int32)">
            <summary>
            设置超时时间
            </summary>
            <param name="sendTimeout">发送超时时间（秒）</param>
            <param name="receiveTimeout">接收超时时间（秒）</param>
        </member>
        <member name="M:YtClient.ActionLoad.RegBeforeEvent(System.String)">
            <summary>
            注册运行之前的事件
            </summary>
            <param name="eIEx"></param>
        </member>
        <member name="M:YtClient.ActionLoad.RegAfterEvent(System.String)">
            <summary>
            注册运行之后的事件
            </summary>
            <param name="eIEx"></param>
        </member>
        <member name="M:YtClient.ActionLoad.#ctor">
            <summary>
            实例化一个ActionLoad对象
            </summary>
        </member>
        <member name="M:YtClient.ActionLoad.Conn">
            <summary>
            获取一个ActionLoad实例对象
            </summary>
            <returns>ActionLoad</returns>
        </member>
        <member name="M:YtClient.ActionLoad.Conn(System.String)">
            <summary>
            通过guid获取一个ActionLoad实例对象
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:YtClient.ActionLoad.InsertTable(System.String)">
            <summary>
            添加插入的表
            </summary>
            <param name="table">表名</param>
            <returns>ActionLoad</returns>
        </member>
        <member name="M:YtClient.ActionLoad.EndTable">
            <summary>
            清除插入的表
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.ActionLoad.SetIsAdd(System.Boolean)">
            <summary>
            设置插入时主键是否自动增加
            </summary>
            <param name="isAdd">true 是 false 否</param>
            <returns>ActionLoad</returns>
        </member>
        <member name="M:YtClient.ActionLoad.SetKeyValue(System.String)">
            <summary>
            设置主键
            </summary>
            <param name="Key">主键</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.ActionLoad.Add(System.String,System.Object)">
            <summary>
            为访问服务端添加参数 服务端由data.Param获取
            </summary>
            <param name="param">参数名称</param>
            <param name="obj">参数值 这里参数只能是可序列化的基本类型 比如时间、字符串、数字、布尔等类型</param>
            <returns>ActionLoad</returns>
        </member>
        <member name="M:YtClient.ActionLoad.Adds(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            批量添加参数
            </summary>
            <param name="ps">参数集合</param>
            <returns>ActionLoad</returns>
        </member>
        <member name="M:YtClient.ActionLoad.AddsFilterNull(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            批量添加参数并过滤Null值
            </summary>
            <param name="ps">参数集合</param>
            <returns>ActionLoad</returns>
        </member>
        <member name="M:YtClient.ActionLoad.SetParams(System.Object[])">
            <summary>
            设置查询参数的数组对象 该参数一般作为查询用 和相关查询的?占位符一一对应
            </summary>
            <param name="param">参数数组</param>
            <returns>ActionLoad</returns>
        </member>
        <member name="M:YtClient.ActionLoad.Find(System.String)">
            <summary>
            执行一个配置查询返回DataTable对象
            </summary>
            <param name="sql">服务端XML操作配置的ID</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YtClient.ActionLoad.Post">
            <summary>
            提交到服务端执行
            </summary>
            <returns>ServiceMsg 服务端返回的信息对象</returns>
        </member>
        <member name="M:YtClient.ActionLoad.Post(YtClient.IYtForm,System.EventHandler)">
            <summary>
             异步提交到服务端执行
            </summary>
            <param name="mainf">主窗体接口</param>
            <param name="ev">提交后的执行动作</param>
        </member>
        <member name="M:YtClient.ActionLoad.Get(System.String,System.Object[])">
            <summary>
            执行返回首行首列
            </summary>
            <param name="sql">服务端XML操作配置的ID</param>
            <param name="pa">需要的参数</param>
            <returns>ObjItem对象</returns>
        </member>
        <member name="M:YtClient.ActionLoad.Find(System.String,System.Object[])">
            <summary>
            执行服务端的一个配置查询返回DataTable对象
            </summary>
            <param name="sql">服务端XML操作配置的ID</param>
            <param name="pa">需要的参数数组</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YtClient.ActionLoad.Get(System.String)">
            <summary>
              执行返回首行首列
            </summary>
            <param name="sql">服务端XML操作配置的ID</param>
            <returns>ObjItem对象</returns>
        </member>
        <member name="F:YtClient.ActionLoad.AlertErr">
            <summary>
            是否提示错误信息
            </summary>
        </member>
        <member name="M:YtClient.ActionLoad.IsGetAutoData">
            <summary>
            如果为一般获取数据则 自动重复执行2次
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.ActionLoad.DataIsChange(System.Data.DataRow)">
            <summary>
            检查数据是发生更改
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:YtClient.ActionLoad.FindOfOriginalSql(System.String,System.Object[])">
            <summary>
            直接执行服务端查询操作 
            </summary>
            <param name="sql">需要执行的查询语句</param>
            <param name="pa"></param>
            <returns></returns>
        </member>
        <member name="M:YtClient.ActionLoad.ExecteOriginalSql(System.String,System.Object[])">
            <summary>
            直接执行返回受影响的列
            </summary>
            <param name="sql">需要执行的语句</param>
            <param name="pa">参数数组</param>
            <returns>ServiceMsg服务端信息</returns>
        </member>
        <member name="M:YtClient.ActionLoad.GetBaseUrl">
            <summary>
            获取服务端的地址
            </summary>
            <returns></returns>
        </member>
        <member name="F:YtClient.ActionLoad.InfoFrm">
            <summary>
            显示的消息窗体
            </summary>
        </member>
        <member name="M:YtClient.ActionLoad.ShowInfo(System.Boolean)">
            <summary>
            单独显示消息窗体
            </summary>
            <param name="flag">是否显示标志</param> 
            <returns></returns>
        </member>
        <member name="E:YtClient.ActionLoad.ServiceLoad">
            <summary>
            服务器成功返回后的事件
            </summary>
        </member>
        <member name="E:YtClient.ActionLoad.ServiceFaiLoad">
            <summary>
            访问服务端失败事件
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.Target">
            <summary>
            回调目标对象
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.CacheData">
            <summary>
            缓存数据标识
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.Guid">
            <summary>
            获取或设置访问的服务端的唯一标识 该标识作为一次调用标识
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.DbConn">
            <summary>
            设置访问的数据库连接
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.Param">
            <summary>
            获取或设置访问服务端的参数
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.Action">
            <summary>
            获取或设置访问服务端的接口名称，该服务端对象必须实现IEx接口 ，如不是固有接口必须 包含命名空间的名称
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.Sql">
            <summary>
            获取或设置访问服务端的查询或分发依据，一般情况下为xml中的Opt的Id
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.DataType">
            <summary>
            获取或设置数据的转化类型
            </summary>
        </member>
        <member name="P:YtClient.ActionLoad.BaseUrl">
            <summary>
            获取或设置访问服务端的地址
            </summary>
        </member>
        <member name="T:YtClient.NYtForm">
            <summary>
            netBar样式的窗体
            </summary>
        </member>
        <member name="F:YtClient.NYtForm.Alert">
            <summary>
            是否出现提示信息
            </summary>
        </member>
        <member name="M:YtClient.NYtForm.HideOpaqueLayer">
            <summary>
            隐藏遮罩层
            </summary>
        </member>
        <member name="M:YtClient.NYtForm.ExeEvent(System.EventHandler)">
            <summary>
            已线程方式执行方法
            </summary>
            <param name="ev"></param>
        </member>
        <member name="T:YtClient.data.ServiceMsg">
            <summary>
            服务器端处理后的消息类
            </summary>
        </member>
        <member name="F:YtClient.data.ServiceMsg.dataXml">
            <summary>
            服务器返回段数据
            </summary>
        </member>
        <member name="M:YtClient.data.ServiceMsg.GetDataTable">
            <summary>
            得到服务器端返回的数据并转化为DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.ServiceMsg.GetDataTable(System.Int32)">
            <summary>
            按参数索引得到服务器端返回的数据并转化为DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.ServiceMsg.GetValue(System.String)">
            <summary>
            得到服务器端返回的数据并转化为String
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.ServiceMsg.GetValue">
            <summary>
            得到服务器端返回的数据并转化为String
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.ServiceMsg.GetValue(System.Int32)">
            <summary>
            按参数索引得到服务器端返回的数据并转化为String
            </summary>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.ServiceMsg.GetTwoValue">
            <summary>
            得到服务器端返回的第二个数据并转化为String
            </summary>
            <returns></returns>
        </member>
        <member name="P:YtClient.data.ServiceMsg.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:YtClient.data.ServiceMsg.Msg">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:YtClient.ClientState">
            <summary>
            客服端连接信息
            </summary>
        </member>
        <member name="P:YtClient.ClientState.ServiceState">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:YtClient.ClientState.UseName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:YtClient.ClientState.Pwd">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:YtClient.ClientState.UserID">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="F:YtClient.TempDataShow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:YtClient.TempDataShow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:YtClient.TempDataShow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:YtClient.Loading.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:YtClient.Loading.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:YtClient.Loading.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:YtClient.data.DataCache">
            <summary>
            用于缓存客服端数据
            </summary>
        </member>
        <member name="M:YtClient.data.DataCache.OptFind(System.String,System.Object[])">
            <summary>
            通过操作关键字查询
            </summary>
            <param name="sql">操作Name</param>
            <param name="param">参数</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.DataCache.SqlFind(System.String,System.Object[])">
            <summary>
            直接通过本地库查询数据
            </summary>
            <param name="csql">sql</param>
            <param name="param">参数</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.DataCache.OptFind(System.String,System.Int32@,System.Object[])">
            <summary>
            通过操作关键字的分页查询
            </summary>
            <param name="sql">操作Name</param>
            <param name="s">记录数</param>
            <param name="param">参数</param>
            <returns></returns>
        </member>
        <member name="M:YtClient.data.DataCache.SqlFind(System.String,System.Int32@,System.Int32,System.Int32,System.Object[])">
            <summary>
            通过Sql直接查询本地库
            </summary>
            <param name="csql"></param>
            <param name="s"></param>
            <param name="st"></param>
            <param name="end"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:YtClient.zb.Op">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:YtClient.zb.Op.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:YtClient.zb.Op.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:YtClient.JsAction">
            <summary>
            实现在脚本中对服务端的访问
            </summary>
        </member>
        <member name="M:YtClient.JsAction.#ctor">
            <summary>
            实例化一个JsAction对象
            </summary>
        </member>
        <member name="M:YtClient.JsAction.ReSet(System.String,System.String,System.String)">
            <summary>
            重置访问服务端的参数
            </summary>
            <param name="Action">服务端接口</param>
            <param name="DbConn">服务端数据连接</param>
            <param name="sql">配置操作ID</param>
        </member>
        <member name="M:YtClient.JsAction.Do">
            <summary>
            执行服务端操作 
            </summary>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YtClient.JsAction.Exe">
            <summary>
            执行服务端操作
            </summary>
            <returns>ServiceMsg服务端信息</returns>
        </member>
        <member name="M:YtClient.JsAction.Fd(System.Object[])">
            <summary>
            执行服务端查询
            </summary>
            <param name="pa">参数</param>
            <returns>DataTable</returns>
        </member>
        <member name="P:YtClient.JsAction.Pa">
            <summary>
            获取或设置访问服务端的参数
            </summary>
        </member>
    </members>
</doc>
