<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAH/+AAB//gAA//8AAf//gAP///APw==
</value>
  </data>
</root>